{"version":3,"sources":["components/Button/index.jsx","components/Table/index.jsx","screens/Submission/index.jsx"],"names":["Button","onClick","children","className","DataTable","columns","data","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","navigateTo","useNavigate","id","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isNumeric","render","isSorted","isSortedDesc","style","width","borderRadius","height","color","padding","backgroundColor","icon","faArrowDown","faArrowUp","row","getRowProps","cells","cell","getCellProps","Header","accessor","Cell","props","original","personalData","namaLengkap","alamat","value","faEye","faEyeSlash","i","push","nama","status","List","useColorMode","colorMode","toggleColorMode","list","useSelector","getSubmissionList","onChange","faPlus","length"],"mappings":"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","file":"static/js/8.d62d26e5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nexport default function Button({ onClick, children }) {\n    return (\n        <button\n            className='border-2 rounded-md bg-gray-400 px-3 py-1 text-white font-bold'\n            onClick={onClick}>\n            {children}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.any\n}","import { Table, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/table\";\nimport { faArrowDown, faArrowUp, faEye, faEyeSlash } from \"@fortawesome/fontawesome-free-solid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useNavigate } from \"react-router\";\nimport { useSortBy, useTable } from \"react-table\";\n\nexport default function DataTable({ columns, data }) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data }, useSortBy)\n\n    const navigateTo = useNavigate()\n\n    return (\n        <Table id='c-data-table' {...getTableProps()} className='cursor-default'>\n            <Thead>\n                {headerGroups.map((headerGroup) => (\n                    <Tr className='cursor-pointer' {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <Th\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\n                                isNumeric={column.isNumeric}>\n                                {column.render(\"Header\")}\n                                {column.isSorted ? (\n                                    column.isSortedDesc\n                                        ? <FontAwesomeIcon\n                                            className='ml-2'\n                                            style={{\n                                                width: 15,\n                                                borderRadius: 100,\n                                                height: 15,\n                                                color: 'black',\n                                                padding: 4,\n                                                backgroundColor: 'white'\n                                            }}\n                                            icon={faArrowDown} />\n                                        : <FontAwesomeIcon\n                                            className='ml-2'\n                                            style={{\n                                                width: 15,\n                                                borderRadius: 100,\n                                                height: 15,\n                                                color: 'black',\n                                                padding: 4, backgroundColor: 'white'\n                                            }}\n                                            icon={faArrowUp} />\n                                ) : ''}\n                            </Th>\n                        ))}\n                    </Tr>\n                ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n                {rows.map((row) => {\n                    prepareRow(row)\n                    return (\n                        <Tr className='cursor-pointer' onClick={() => navigateTo(`/${row?.id}`)} {...row.getRowProps()}>\n                            {row.cells.map((cell) => (\n                                <Td {...cell.getCellProps()}\n                                    isNumeric={cell.column.isNumeric}>\n                                    {cell.render(\"Cell\")}\n                                </Td>\n                            ))}\n                        </Tr>\n                    )\n                })}\n            </Tbody>\n        </Table>\n    )\n}\n\nexport const columns = [\n    {\n        Header: 'ID No.',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nama Lengkap',\n        accessor: 'namaLengkap',\n        Cell: (props) => props?.row?.original?.personalData?.namaLengkap || '-'\n    },\n    {\n        Header: 'Alamat',\n        accessor: 'alamat',\n        Cell: (props) => props?.row?.original?.personalData?.alamat || '-'\n    },\n    {\n        Header: '',\n        accessor: 'status',\n        Cell: (props) => {\n            return (\n                // <Link to={goToDetail}>\n                <FontAwesomeIcon\n                    className='ms-1'\n                    style={{\n                        width: 15,\n                        borderRadius: 100,\n                        height: 15,\n                        color: 'grey'\n                    }}\n                    icon={props.value ? faEye : faEyeSlash} />\n\n                // </Link>\n            )\n        }\n    },\n\n]\n\nexport const data = []\n\nfor (let i = 0; i <= 100; i++) {\n    data.push({\n        id: 'LAV',\n        nama: 'AU56503AU88384ERT',\n        alamat: 'Sofrad Enterprises Pty Ltd',\n        status: i % 2 === 0 ? true : false,\n    })\n}","import Table, { columns } from \"../../components/Table\";\nimport Button from '../../components/Button'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/fontawesome-free-solid\";\nimport { useNavigate } from \"react-router\";\nimport { Switch } from \"@chakra-ui/switch\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { useSelector } from \"react-redux\";\nimport { getSubmissionList } from \"../../stores/reducers/submissionList\";\n\nexport default function List() {\n    const navigateTo = useNavigate()\n    const { colorMode, toggleColorMode } = useColorMode()\n    const list = useSelector(getSubmissionList)\n\n    return (\n        <div className='w-full'>\n            <div className='w-full flex justify-between py-3'>\n                <Box className='font-bold'>Teravin test React.js</Box>\n                <Switch className='flex items-center font-bold' onChange={toggleColorMode}>\n                    {colorMode === \"light\" ? \"Dark\" : \"Light\"} Mode\n                </Switch>\n            </div>\n            <div className='my-3'>\n                <Button onClick={() => navigateTo('/register')}>\n                    <FontAwesomeIcon\n                        className='mr-1'\n                        icon={faPlus} />\n                    Add Data\n                </Button>\n            </div>\n            {list?.length > 0 ? <Table\n                data={list}\n                columns={columns} />\n                :\n                <div className='font-bold'>Data masih kosong. Add data untuk mendambahkan list</div>\n            }\n        </div>\n    )\n}"],"sourceRoot":""}