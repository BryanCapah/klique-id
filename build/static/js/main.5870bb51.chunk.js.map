{"version":3,"sources":["stores/reducers/submission/index.js","stores/store.js","components/Form/services.js","stores/reducers/submissionList/index.js","App.js","reportWebVitals.js","index.js"],"names":["submission","createSlice","name","initialState","personalData","riwayatPendidikan","pengalamanKerja","keahlian","reducers","submisionAction","state","action","setPersonalData","addRowAction","addNewRow","getSubmission","actions","configureStore","reducer","submissionReducer","submissionList","submissionListReducer","onChange","e","inputType","formName","store","dispatch","setData","target","value","options","selectedIndex","label","text","payload","idx","length","map","item","index","submisionListAction","push","getSubmissionList","getSubmissionDetail","id","filter","Number","App","SubmissionList","lazy","SubmissionRegister","SubmissionDetail","Loading","className","fallback","exact","path","element","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","theme","extendTheme","useSystemColorMode","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.5870bb51.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { addNewRow, setPersonalData } from '../../../components/Form/services'\n\nconst initialState = {\n    personalData: {\n    },\n    riwayatPendidikan: [{}],\n    pengalamanKerja: [{}],\n    keahlian: [{}]\n}\n\nconst submission = createSlice({\n    name: 'submission',\n    initialState,\n    reducers: {\n        submisionAction(state, action) {\n            return setPersonalData({ state, action })\n        },\n        addRowAction(state, action) {\n            return addNewRow({ state, action })\n        }\n    },\n})\n\n// getter\nexport const getPersonalData = state => state?.submission?.personalData\nexport const getRiwayatPendidikan = state => state?.submission?.riwayatPendidikan\nexport const getPengalamanKerja = state => state?.submission?.pengalamanKerja\nexport const getKeahlian = state => state?.submission?.keahlian\nexport const getSubmission = state => state?.submission\n\n//setter\nexport const { submisionAction, addRowAction } = submission.actions\nexport default submission.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport submissionReducer from './reducers/submission'\nimport submissionListReducer from './reducers/submissionList'\n\nexport default configureStore({\n    reducer: {\n        submission: submissionReducer,\n        submissionList: submissionListReducer\n    },\n})\n","import { addRowAction, submisionAction } from \"../../stores/reducers/submission\"\nimport store from \"../../stores/store\"\n\nexport const onChange = ({ e, inputType, formName }) => {\n    if (inputType !== 'action') store.dispatch(submisionAction(setData({ e, inputType, formName })))\n    else store.dispatch(addRowAction(setData({ e, inputType, formName })))\n}\n\nconst setData = ({ e, inputType, formName }) => {\n    const {\n        value,\n        name,\n        options,\n        selectedIndex\n    } = e.target\n\n    switch (inputType) {\n        case 'text':\n            return { name, value, formName }\n\n        case 'select':\n            const data = {\n                label: options[selectedIndex].text,\n                value: value\n            }\n            return { name, value: data, formName }\n\n        case 'radio':\n            return { name, value, formName }\n        case 'action':\n            return { formName }\n\n        default:\n            break\n    }\n}\n\nexport const setPersonalData = ({ state, action }) => {\n    const { name, value, formName } = action.payload\n    const idx = state[formName]?.length - 1\n    if (value || value === '') {\n        if (formName === 'personalData') return {\n            ...state,\n            [formName]: {\n                ...state[formName],\n                [name]: value\n            }\n        }\n        else {\n            return {\n                ...state,\n                [formName]: state[formName]?.map((item, index) => {\n                    if (index === idx) return { ...item, [name]: value }\n                    else return { ...item }\n                })\n            }\n\n        }\n    }\n}\n\nexport const addNewRow = ({ state, action }) => {\n    const { formName } = action.payload\n    return {\n        ...state,\n        [formName]: [...state[formName], {}]\n    }\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = []\n\nconst submissionList = createSlice({\n    name: 'addList',\n    initialState,\n    reducers: {\n        submisionListAction(state, action) {\n\n            state.push(action.payload)\n        },\n    },\n})\n\n// getter\nexport const getSubmissionList = state => state?.submissionList\nexport const getSubmissionDetail = ({ state, id }) => state?.submissionList?.filter(submission => submission.id === Number(id))[0]\n\n//setter\nexport const { submisionListAction } = submissionList.actions\nexport default submissionList.reducer\n","\nimport { lazy, memo, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport './App.css';\n\nfunction App() {\n  const SubmissionList = lazy(() => import('./screens/Submission'))\n  const SubmissionRegister = lazy(() => import('./screens/Submission/Register'))\n  const SubmissionDetail = lazy(() => import('./screens/Submission/Detail'))\n  const Loading = () => <div></div>\n\n\n\n  return (\n    <div className='w-full'>\n\n      <div className='App md:px-36 sm:px-0'>\n        <Router>\n          <Suspense fallback={<Loading />}>\n            <Routes>\n              <Route\n                exact\n                path='/'\n                name='Submission List'\n                element={<SubmissionList />}\n              />\n              <Route\n                exact\n                path='/register'\n                name='Submission Register'\n                element={<SubmissionRegister />}\n              />\n              <Route\n                exact\n                path='/:id'\n                name='Submission Detail'\n                element={<SubmissionDetail />}\n              />\n            </Routes>\n          </Suspense>\n        </Router>\n      </div>\n    </div>\n\n  );\n}\n\nexport default memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider theme={extendTheme({\n        useSystemColorMode: false,\n        initialColorMode: \"light\",\n      })}>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}